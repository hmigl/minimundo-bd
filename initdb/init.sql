-- initdb/init.sql

-- ------------------------------------------------
-- 1) TABELAS PRINCIPAIS
-- ------------------------------------------------

CREATE TABLE TB_SALA (
  ID_SALA        INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  NM_SALA        VARCHAR(50) NOT NULL UNIQUE,
  QTD_CAPACIDADE INTEGER NOT NULL
    CONSTRAINT CK_TB_SALA_QTD_CAPACIDADE CHECK (QTD_CAPACIDADE > 0),
  DS_RECURSOS    TEXT
);

CREATE TABLE TB_EVENTO (
  ID_EVENTO      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  NM_EVENTO      VARCHAR(100) NOT NULL,
  DT_INICIO      DATE NOT NULL,
  DT_FIM         DATE NOT NULL,
  DS_LOCAL_GERAL VARCHAR(100)
);

CREATE TABLE TB_INSTRUTOR (
  ID_INSTRUTOR  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  NM_INSTRUTOR  VARCHAR(100) NOT NULL,
  DS_EMAIL      VARCHAR(100) NOT NULL UNIQUE,
  DS_TELEFONE   VARCHAR(20)
);

CREATE TABLE TB_PARTICIPANTE (
  ID_PARTICIPANTE INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  NM_PARTICIPANTE VARCHAR(100) NOT NULL,
  CD_MATRICULA    VARCHAR(20),
  DS_EMAIL        VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE TB_MATERIAL (
  ID_MATERIAL   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  DS_DESCRICAO  VARCHAR(200) NOT NULL,
  TP_TIPO       VARCHAR(20) NOT NULL
    CONSTRAINT CK_TB_MATERIAL_TP_TIPO CHECK (TP_TIPO IN ('IMPRESSO','ELETRONICO')),
  QTD_TOTAL     INTEGER NOT NULL
    CONSTRAINT CK_TB_MATERIAL_QTD_TOTAL CHECK (QTD_TOTAL >= 0)
);

CREATE TABLE TB_ATIVIDADE (
  ID_ATIVIDADE INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  DS_TITULO     VARCHAR(100) NOT NULL,
  DS_DESCRICAO  TEXT,
  DT_INICIO     DATE NOT NULL,
  DT_FIM        DATE NOT NULL,
  ID_EVENTO     INTEGER NOT NULL
    CONSTRAINT FK_TB_ATIVIDADE_EVENTO REFERENCES TB_EVENTO(ID_EVENTO),
  ID_SALA       INTEGER NOT NULL
    CONSTRAINT FK_TB_ATIVIDADE_SALA   REFERENCES TB_SALA  (ID_SALA)
);

CREATE TABLE RL_ATIVIDADE_INSTRUTOR (
  ID_ATIVIDADE INTEGER NOT NULL
    CONSTRAINT FK_RL_ATIV_INSTR_ATIV   REFERENCES TB_ATIVIDADE  (ID_ATIVIDADE),
  ID_INSTRUTOR INTEGER NOT NULL
    CONSTRAINT FK_RL_ATIV_INSTR_INSTR  REFERENCES TB_INSTRUTOR   (ID_INSTRUTOR),
  PRIMARY KEY (ID_ATIVIDADE, ID_INSTRUTOR)
);

CREATE TABLE TB_INSCRICAO (
  ID_INSCRICAO   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ID_PARTICIPANTE INTEGER NOT NULL
    CONSTRAINT FK_TB_INSCRICAO_PARTICIPANTE REFERENCES TB_PARTICIPANTE(ID_PARTICIPANTE),
  ID_ATIVIDADE    INTEGER NOT NULL
    CONSTRAINT FK_TB_INSCRICAO_ATIVIDADE    REFERENCES TB_ATIVIDADE  (ID_ATIVIDADE),
  DT_INSCRICAO     DATE NOT NULL,
  CONSTRAINT UK_TB_INSCRICAO_UNICA UNIQUE (ID_PARTICIPANTE, ID_ATIVIDADE)
);

CREATE TABLE TB_PRESENCA (
  ID_INSCRICAO INTEGER NOT NULL
    CONSTRAINT FK_TB_PRESENCA_INSCRICAO REFERENCES TB_INSCRICAO(ID_INSCRICAO),
  DT_SESSAO    DATE    NOT NULL,
  ST_PRESENCA  VARCHAR(10) NOT NULL
    CONSTRAINT CK_TB_PRESENCA_ST_PRESENCA CHECK (ST_PRESENCA IN ('PRESENTE','AUSENTE')),
  PRIMARY KEY (ID_INSCRICAO, DT_SESSAO)
);

CREATE TABLE TB_CERTIFICADO (
  ID_CERTIFICADO INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ID_INSCRICAO   INTEGER NOT NULL UNIQUE
    CONSTRAINT FK_TB_CERTIFICADO_INSCRICAO REFERENCES TB_INSCRICAO(ID_INSCRICAO),
  CD_CHAVE       VARCHAR(50) NOT NULL,
  DT_EMISSAO     DATE NOT NULL
);

CREATE TABLE TB_FEEDBACK (
  ID_FEEDBACK  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ID_INSCRICAO INTEGER NOT NULL
    CONSTRAINT FK_TB_FEEDBACK_INSCRICAO REFERENCES TB_INSCRICAO(ID_INSCRICAO),
  NR_NOTA      INTEGER NOT NULL
    CONSTRAINT CK_TB_FEEDBACK_NR_NOTA CHECK (NR_NOTA BETWEEN 1 AND 5),
  DS_COMENTARIO TEXT
    CONSTRAINT CK_TB_FEEDBACK_DS_COMENTARIO CHECK (DS_COMENTARIO IS NULL OR char_length(DS_COMENTARIO) >= 10),
  DT_FEEDBACK   DATE NOT NULL
);

CREATE TABLE TB_PARCEIRO (
  ID_PARCEIRO INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  NM_PARCEIRO VARCHAR(100) NOT NULL,
  TP_PARCEIRO VARCHAR(10) NOT NULL
    CONSTRAINT CK_TB_PARCEIRO_TP_PARCEIRO CHECK (TP_PARCEIRO IN ('EMPRESA','ONG')),
  DS_CONTATO  VARCHAR(100)
);

CREATE TABLE TB_PATROCINIO (
  ID_PATROCINIO   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ID_PARCEIRO     INTEGER NOT NULL
    CONSTRAINT FK_TB_PATROCINIO_PARCEIRO REFERENCES TB_PARCEIRO  (ID_PARCEIRO),
  ID_EVENTO       INTEGER NOT NULL
    CONSTRAINT FK_TB_PATROCINIO_EVENTO  REFERENCES TB_EVENTO    (ID_EVENTO),
  VL_CONTRIBUICAO NUMERIC(12,2) NOT NULL
    CONSTRAINT CK_TB_PATROCINIO_VL_CONTRIBUICAO CHECK (VL_CONTRIBUICAO >= 0)
);

CREATE TABLE TH_HISTORICO_PARTICIPACAO (
  ID_HISTORICO_PARTICIPACAO INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ID_PARTICIPANTE           INTEGER NOT NULL
    CONSTRAINT FK_TH_HIST_PC_PARTICIPANTE REFERENCES TB_PARTICIPANTE(ID_PARTICIPANTE),
  ID_ATIVIDADE              INTEGER NOT NULL
    CONSTRAINT FK_TH_HIST_PC_ATIVIDADE    REFERENCES TB_ATIVIDADE  (ID_ATIVIDADE),
  DT_CONCLUSAO              DATE    NOT NULL,
  CONSTRAINT UK_TH_HIST_PC_UNICA UNIQUE (ID_PARTICIPANTE, ID_ATIVIDADE)
);

CREATE TABLE TB_VOLUNTARIO (
  ID_VOLUNTARIO INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  NM_VOLUNTARIO VARCHAR(100) NOT NULL,
  TP_TIPO       VARCHAR(10) NOT NULL
    CONSTRAINT CK_TB_VOLUNTARIO_TP_TIPO CHECK (TP_TIPO IN ('ALUNO','EXTERNO')),
  DS_CONTATO    VARCHAR(100)
);

CREATE TABLE TB_TAREFA_VOLUNTARIO (
  ID_TAREFA_VOLUNTARIO INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ID_VOLUNTARIO        INTEGER NOT NULL
    CONSTRAINT FK_TB_TAREFA_VOLUNTARIO_VOLUNTARIO REFERENCES TB_VOLUNTARIO (ID_VOLUNTARIO),
  ID_ATIVIDADE         INTEGER NOT NULL
    CONSTRAINT FK_TB_TAREFA_VOLUNTARIO_ATIVIDADE  REFERENCES TB_ATIVIDADE (ID_ATIVIDADE),
  DS_DESCRICAO         TEXT    NOT NULL,
  ST_STATUS            VARCHAR(10) NOT NULL
    CONSTRAINT CK_TB_TAREFA_VOLUNTARIO_ST_STATUS CHECK (ST_STATUS IN ('PENDENTE','CONCLUIDA'))
);

CREATE TABLE TB_USO_MATERIAL (
  ID_USO_MATERIAL INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ID_MATERIAL     INTEGER NOT NULL
    CONSTRAINT FK_TB_USO_MATERIAL_MATERIAL   REFERENCES TB_MATERIAL  (ID_MATERIAL),
  ID_ATIVIDADE    INTEGER NOT NULL
    CONSTRAINT FK_TB_USO_MATERIAL_ATIVIDADE REFERENCES TB_ATIVIDADE (ID_ATIVIDADE),
  QTD_UTILIZADA   INTEGER NOT NULL
    CONSTRAINT CK_TB_USO_MATERIAL_QTD_UTILIZADA CHECK (QTD_UTILIZADA >= 0)
);

CREATE TABLE TB_AVALIACAO_INSTRUTOR (
  ID_AVALIACAO_INSTRUTOR INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ID_INSTRUTOR           INTEGER NOT NULL
    CONSTRAINT FK_TB_AVALIACAO_INSTRUTOR_INSTRUTOR REFERENCES TB_INSTRUTOR (ID_INSTRUTOR),
  ID_ATIVIDADE           INTEGER NOT NULL
    CONSTRAINT FK_TB_AVALIACAO_INSTRUTOR_ATIVIDADE REFERENCES TB_ATIVIDADE (ID_ATIVIDADE),
  NR_NOTA                INTEGER NOT NULL
    CONSTRAINT CK_TB_AVALIACAO_INSTRUTOR_NR_NOTA CHECK (NR_NOTA BETWEEN 1 AND 5),
  DS_COMENTARIO          TEXT
    CONSTRAINT CK_TB_AVALIACAO_INSTRUTOR_DS_COMENTARIO CHECK (DS_COMENTARIO IS NULL OR char_length(DS_COMENTARIO) >= 10)
);

-- ------------------------------------------------
-- 2) TRIGGERS
-- ------------------------------------------------

CREATE OR REPLACE FUNCTION FC_CK_PRESENCA_DATA()
RETURNS TRIGGER AS $$
BEGIN
  IF (NEW.DT_SESSAO < ( SELECT DT_INICIO FROM TB_ATIVIDADE WHERE ID_ATIVIDADE =
        (SELECT ID_ATIVIDADE FROM TB_INSCRICAO WHERE ID_INSCRICAO = NEW.ID_INSCRICAO))
      OR
      NEW.DT_SESSAO > ( SELECT DT_FIM    FROM TB_ATIVIDADE WHERE ID_ATIVIDADE =
        (SELECT ID_ATIVIDADE FROM TB_INSCRICAO WHERE ID_INSCRICAO = NEW.ID_INSCRICAO))
     )
  THEN
    RAISE EXCEPTION 'Data de sessao fora do periodo da atividade';
  END IF;
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER TG_BI_PRESENCA
  BEFORE INSERT ON TB_PRESENCA
  FOR EACH ROW EXECUTE FUNCTION FC_CK_PRESENCA_DATA();

